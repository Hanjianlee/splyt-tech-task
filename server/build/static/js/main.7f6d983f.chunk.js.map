{"version":3,"sources":["utils/constants.ts","components/Map/index.tsx","components/UserDetail/index.tsx","components/HQSelector/index.tsx","components/DriverCountSlider/index.tsx","actionTypes/generateApiTypes.ts","actionTypes/usersTypes.ts","actionTypes/driversTypes.ts","utils/permissions.ts","App.tsx","actions/users.ts","actions/drivers.ts","reportWebVitals.ts","reducers/usersReducer.ts","reducers/driverReducer.ts","reducers/index.ts","utils/server.ts","sagas/driversSaga.ts","utils/getDistance.ts","sagas/usersSaga.ts","sagas/index.ts","store.ts","index.tsx"],"names":["MULTIPART_FORM_DATA","NEAREST_HQ_STRING","process","REACT_APP_API_URL","REACT_APP_MAP_GL_STYLE","REACT_APP_API_KEY","REACT_APP_MAP_GL_TOKEN","HQLOCATIONS","country","longitude","latitude","Map","props","useState","width","height","zoom","viewport","setViewport","useEffect","user","HQLocation","handleResize","event","window","target","innerWidth","innerHeight","addEventListener","removeEventListener","mapStyle","mapboxApiAccessToken","onViewportChange","nextViewport","maxZoom","minZoom","ref","el","map","location","className","src","alt","driver","drivers","style","transform","bearing","driver_id","React","memo","UserDetail","Fragment","geoPermission","toFixed","HQSelector","selections","setSelections","selected","setSelected","locations","updateSelections","_","uniqBy","toLowerCase","onClick","returnToNearest","handleClick","DriverCountSlider","count","setCount","type","min","minValue","max","maxValue","value","onChange","handleChange","generateApiActions","model","api","REQUESTED","SUCCESS","FAILED","USERS","MODEL","UPDATE_USER_LOCATION","UPDATE_USER_DRIVER_COUNT","GET_NEAREST_HQ_LOCATION","UPDATE_USER_HQ_LOCATION","DRIVERS","GET_NEAREST_DRIVERS","getGeolocationSuccess","position","coords","getGeolocationFailed","alert","getGeolocationPermission","navigator","a","Promise","resolve","reject","geolocation","getCurrentPosition","console","log","mapDispatchToProps","updateUserLocation","payload","updateUserDriverCount","getNearestHQLocation","getNearestDrivers","updateUserHQLocation","connect","state","ownProps","clearInterval","id","setInterval","getLocation","then","geoLocation","permissions","driverCount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","status","userSelector","error","pickup_eta","rootReducer","combineReducers","action","get","route","query","options","method","data","contentType","authHeader","token","Authorization","btoa","API_KEY","headers","getOptions","url","host","prefix","QueryString","stringify","getUrl","axios","request","crossDomain","response","catch","dispatchApiAction","getDrivers","driversSaga","select","Number","put","call","length","all","takeLatest","getDistanceHF","latitude1","latitude2","longitude1","longitude2","distanceLatitude","deg2rad","distanceLongitude","chordDistance","Math","sin","cos","atan2","sqrt","deg","PI","nearestDistance","distance","nearestHQ","forEach","hq","index","rootSaga","fork","usersSaga","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f6d983f.chunk.js","sourcesContent":["/** Just Global Constants **/\r\nexport const MULTIPART_FORM_DATA: string = \"multipart/form-data\";\r\nexport const APPLICATION_JSON: string = \"applciation/json\";\r\nexport const MINIMUM_DRIVERS: number = 1;\r\nexport const MAXIMUM_DRIVERS: number = 10;\r\nexport const MINIMUM_ZOOM: number = 10;\r\nexport const MAXIMUM_ZOOM: number = 20;\r\nexport const DEFAULT_ZOOM: number = 14;\r\nexport const NEAREST_HQ_STRING: string = \"Nearest-HQ\";\r\nexport const {\r\n  REACT_APP_API_URL,\r\n  REACT_APP_API_KEY,\r\n  REACT_APP_MAP_GL_STYLE,\r\n  REACT_APP_MAP_GL_TOKEN,\r\n} = process.env;\r\nexport const API_PREFIX: string = \"api\";\r\nexport type LocationType = {\r\n  longitude: number;\r\n  latitude: number;\r\n};\r\nexport type HQLocationType = LocationType & {\r\n  country: string;\r\n};\r\nexport const HQLOCATIONS: HQLocationType[] = [\r\n  {\r\n    country: \"Singapore\",\r\n    longitude: 103.8522982,\r\n    latitude: 1.285194,\r\n  },\r\n  {\r\n    country: \"London\",\r\n    longitude: -0.0964509,\r\n    latitude: 51.5049375,\r\n  },\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.scss\";\r\n/** Components **/\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\n/** Interfaces **/\r\nimport { GetNearestDriversInterface } from \"../../actions/drivers\";\r\nimport { UserInterface } from \"../../reducers/usersReducer\";\r\nimport {\r\n  DriverInterface,\r\n  DriverDetailsInterface,\r\n} from \"../../reducers/driverReducer\";\r\n/** Constants **/\r\nimport {\r\n  REACT_APP_MAP_GL_STYLE,\r\n  REACT_APP_MAP_GL_TOKEN,\r\n  HQLOCATIONS,\r\n  MINIMUM_ZOOM,\r\n  MAXIMUM_ZOOM,\r\n  DEFAULT_ZOOM,\r\n} from \"../../utils/constants\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n/** Temporary work around to let build version to work\r\n *  as Babel has some issues loading the modules **/\r\n// eslint-disable-next-line\r\nimport mapboxgl from \"mapbox-gl\"; // This is a dependency of react-map-gl even if you didn't explicitly install it\r\n// @ts-ignore\r\n// eslint-disable-next-line\r\nimport MapboxWorker from \"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\";\r\n// eslint-disable-next-line\r\nimport { rootCertificates } from \"tls\";\r\n\r\ninterface PropsInterface {\r\n  user?: UserInterface;\r\n  driver?: DriverInterface;\r\n  getNearestDrivers?: (payload: GetNearestDriversInterface) => void;\r\n}\r\n\r\ninterface ViewportPropsInterface {\r\n  width: any;\r\n  height: any;\r\n  latitude: number;\r\n  longitude: number;\r\n  zoom: number;\r\n}\r\n\r\nexport const Map = (props: PropsInterface) => {\r\n  /** Default will be UK HQ **/\r\n  const [viewport, setViewport] = useState<ViewportPropsInterface>({\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    latitude: 51.5049375,\r\n    longitude: -0.0964509,\r\n    zoom: DEFAULT_ZOOM,\r\n  });\r\n\r\n  /** Update Viewport Location if User's location is updated **/\r\n  useEffect(() => {\r\n    const { latitude, longitude } = props.user?.HQLocation\r\n      ? props.user?.HQLocation\r\n      : viewport;\r\n    if (\r\n      (viewport.latitude !== latitude || viewport.longitude !== longitude) &&\r\n      longitude &&\r\n      latitude\r\n    )\r\n      setViewport({ ...viewport, longitude, latitude } as any);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.user?.HQLocation.longitude, props.user?.HQLocation.latitude]);\r\n\r\n  /** On Window Resize **/\r\n  useEffect(() => {\r\n    function handleResize(event: Event) {\r\n      const window = event.target as Window;\r\n      setViewport({\r\n        ...viewport,\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    /** Remove Old Listener if new Listeners are added **/\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [viewport]);\r\n  return (\r\n    <ReactMapGL\r\n      mapStyle={REACT_APP_MAP_GL_STYLE}\r\n      {...viewport}\r\n      mapboxApiAccessToken={REACT_APP_MAP_GL_TOKEN}\r\n      onViewportChange={(nextViewport: any) => setViewport(nextViewport)}\r\n      maxZoom={MAXIMUM_ZOOM}\r\n      minZoom={MINIMUM_ZOOM}\r\n      ref={(el) => ((window as any).map = el)}\r\n    >\r\n      {HQLOCATIONS.map((location) => (\r\n        <Marker\r\n          key={location.country}\r\n          longitude={location.longitude}\r\n          latitude={location.latitude}\r\n        >\r\n          <img\r\n            className=\"splyt-marker-svg\"\r\n            src=\"/splytMarker.svg\"\r\n            alt=\"/splytMarker.svg\"\r\n          />\r\n        </Marker>\r\n      ))}\r\n      {props.driver?.drivers.map((driver: DriverDetailsInterface) => (\r\n        <Marker\r\n          key={driver.driver_id}\r\n          longitude={driver.location.longitude}\r\n          latitude={driver.location.latitude}\r\n        >\r\n          <img\r\n            className=\"taxi-marker-svg\"\r\n            src=\"/image2vector.svg\"\r\n            alt=\"/image2vector.svg\"\r\n            style={{\r\n              transform: `rotate(${driver.location.bearing - 90}deg)`,\r\n            }}\r\n          />\r\n        </Marker>\r\n      ))}\r\n    </ReactMapGL>\r\n  );\r\n};\r\n\r\nexport default React.memo(Map);\r\n","import React from \"react\";\r\nimport { UserInterface } from \"../../reducers/usersReducer\";\r\n\r\nimport \"./styles.scss\";\r\nexport interface PropsInterface {\r\n  user: UserInterface | undefined;\r\n}\r\nexport const UserDetail = (props: PropsInterface) => {\r\n  return (\r\n    <div className=\"user-detail\" aria-label=\"user-detail\">\r\n      {props.user ? (\r\n        <React.Fragment>\r\n          {props.user.geoPermission === \"Granted\" ? (\r\n            <React.Fragment>\r\n              <div\r\n                className=\"user-detail-header\"\r\n                aria-label=\"user-detail-granted\"\r\n              >\r\n                <span className=\"user-detail-header-text\">\r\n                  {\" \"}\r\n                  Location Access : {props.user.geoPermission}\r\n                </span>{\" \"}\r\n                <span className=\"user-detail-header-arrow\">{\">\"}</span>\r\n              </div>\r\n              <div className=\"user-detail-granted-content-section\">\r\n                <div className=\"user-detail-granted-content\">\r\n                  Location :\r\n                  {props.user.latitude ? props.user.latitude.toFixed(2) : null},\r\n                  {props.user.longitude\r\n                    ? props.user.longitude.toFixed(2)\r\n                    : null}\r\n                </div>\r\n                <div className=\"user-detail-granted-content\">\r\n                  Nearest HQ: {props.user.HQLocation.country}\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <div\r\n                className=\"user-detail-header\"\r\n                aria-label=\"user-detail-denied\"\r\n              >\r\n                <span className=\"user-detail-header-text\">\r\n                  Location Access : {props.user.geoPermission}\r\n                </span>\r\n                <span className=\"user-detail-header-arrow\">{\">\"}</span>\r\n              </div>\r\n              <div className=\"user-detail-denied-content-section\">\r\n                <div className=\"user-detail-denied-content\">\r\n                  Allow Location Permission of your browser to localhost:3000\r\n                  <br />\r\n                  and get the best experience :)\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <div className=\"user-detail-header\" aria-label=\"user-detail-loading\">\r\n            <span className=\"user-detail-header-text\"> Getting Permission</span>{\" \"}\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default UserDetail;\r\n","import { useEffect, useState } from \"react\";\r\nimport { HQLocationType, NEAREST_HQ_STRING } from \"../../utils/constants\";\r\nimport _ from \"lodash\";\r\nimport \"./styles.scss\";\r\nexport interface PropsInterface {\r\n  locations: HQLocationType[] | null;\r\n  returnToNearest?: () => void;\r\n  onClick: (event: any) => void;\r\n}\r\nexport const HQSelector = (props: PropsInterface) => {\r\n  const [selections, setSelections] = useState<HQLocationType[]>([\r\n    {\r\n      country: NEAREST_HQ_STRING,\r\n      latitude: 0,\r\n      longitude: 0,\r\n    },\r\n  ]);\r\n\r\n  /** Update HQ Locations **/\r\n  const [selected, setSelected] = useState<HQLocationType>({\r\n    country: NEAREST_HQ_STRING,\r\n    latitude: 0,\r\n    longitude: 0,\r\n  });\r\n  \r\n  /** If The Location props is updated, it will be re-rendered with latest Array**/\r\n  useEffect(() => {\r\n    const locations = props.locations ? props.locations : [];\r\n    const updateSelections = _.uniqBy([...locations, ...selections], \"country\");\r\n    setSelections(updateSelections);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.locations]);\r\n\r\n  /** Handle Selected HQ**/\r\n  const handleClick = (location: HQLocationType) => {\r\n    setSelected(location);\r\n    if (location.country === NEAREST_HQ_STRING) {\r\n      /** Head to Nearest Stored HQ**/\r\n      return props.returnToNearest ? props.returnToNearest() : null;\r\n    } else {\r\n      return props.onClick({ HQLocation: location });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"hq-selector\" aria-label=\"hq-selector\">\r\n      <div className=\"hq-selector-header\">\r\n        <span className=\"hq-selector-header-text\">{selected.country}</span>{\" \"}\r\n        <span className=\"hq-selector-header-arrow\">{\">\"}</span>\r\n      </div>\r\n      <div className=\"hq-selector-selections\">\r\n        {selections.map((location) => (\r\n          <div\r\n            aria-label={`hq-selector-selection-${location.country.toLowerCase()}`}\r\n            data-test-id=\"\"\r\n            key={location.country}\r\n            className={\r\n              selected.country === location.country\r\n                ? \"selected hq-selector-selection\"\r\n                : \"hq-selector-selection\"\r\n            }\r\n            onClick={() => handleClick(location)}\r\n          >\r\n            {location.country}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default HQSelector;\r\n","import { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nexport interface PropsInterface {\r\n  maxValue: number;\r\n  minValue: number;\r\n  count: string | undefined;\r\n  value?: number | null;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const DriverCountSlider = (props: PropsInterface) => {\r\n  const [count, setCount] = useState<string>(props.count ? props.count : \"0\");\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.onChange(event);\r\n    setCount(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"driver-count-slider-container\">\r\n      <p className=\"driver-count-slider-header\" aria-label=\"driver-count-title\">\r\n        Taxi Count\r\n      </p>\r\n      <input\r\n        className=\"driver-count-slider-input\"\r\n        aria-label=\"driver-count-slider\"\r\n        type=\"range\"\r\n        min={props.minValue}\r\n        max={props.maxValue}\r\n        value={count}\r\n        onChange={(event) => handleChange(event)}\r\n      />\r\n      <p className=\"driver-count-slider-count\" aria-label=\"driver-count-text\">\r\n        {count}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default DriverCountSlider;\r\n","/** Defines the Process of Each Type of Api Requests **/\r\nexport function generateApiActions(model: string, api: string) {\r\n  return {\r\n    REQUESTED: `${model}/${api}/REQUESTED`,\r\n    SUCCESS: `${model}/${api}/SUCCESS`,\r\n    FAILED: `${model}/${api}/FAILED`,\r\n  };\r\n}\r\n\r\n/** Defines the Each Type of Rest Api Requests **/\r\nexport function generateRestActions(model: string) {\r\n  return {\r\n    GET: generateApiActions(model, \"GET\"),\r\n    LIST: generateApiActions(model, \"LIST\"),\r\n    POST: generateApiActions(model, \"POST\"),\r\n    PATCH: generateApiActions(model, \"PATCH\"),\r\n    PUT: generateApiActions(model, \"PUT\"),\r\n    DELETE: generateApiActions(model, \"DELETE\"),\r\n  };\r\n}\r\n","import { generateApiActions } from \"./generateApiTypes\";\r\n\r\nexport const UPDATE_USER_LOCATION: string = \"UPDATE_USER_LOCATION\";\r\nexport const GET_NEAREST_HQ_LOCATION: string = \"GET_NEAREST_HQ_LOCATION\";\r\nexport const UPDATE_USER_DRIVER_COUNT: string = \"UPDATE_USER_DRIVER_COUNT\";\r\nexport const UPDATE_USER_HQ_LOCATION: string = \"UPDATE_USER_HQ_LOCATION\";\r\nexport const USERS = {\r\n  MODEL: \"users\",\r\n  UPDATE_USER_LOCATION,\r\n  UPDATE_USER_DRIVER_COUNT,\r\n  GET_NEAREST_HQ_LOCATION: generateApiActions(\"users\", GET_NEAREST_HQ_LOCATION),\r\n  UPDATE_USER_HQ_LOCATION,\r\n};\r\n","import { generateApiActions } from \"./generateApiTypes\";\r\nexport const DRIVERS = {\r\n  MODEL: \"drivers\",\r\n  GET_NEAREST_DRIVERS: generateApiActions(\"drivers\", \"GET_NEAREST_DRIVERS\"),\r\n};\r\n","export interface GeoLocationInterface {\r\n  longitude: number | null;\r\n  latitude: number | null;\r\n  geoPermission: string;\r\n}\r\nexport function getGeolocationSuccess(\r\n  position: GeolocationPosition\r\n): GeoLocationInterface {\r\n  const { longitude, latitude } = position.coords;\r\n  return { longitude, latitude, geoPermission: \"Granted\" };\r\n}\r\nexport function getGeolocationFailed(\r\n  position: GeolocationPositionError\r\n): GeoLocationInterface {\r\n  alert(\r\n    \"Hey There !\\nPlease Allow Location to work :) \\nGo To Settings on the Top Right corner \\nPrivacy and Security\\nSite Settings > localhost:3000 \\nLocation > Allow\\n\"\r\n  );\r\n  return {\r\n    longitude: null,\r\n    latitude: null,\r\n    geoPermission: \"Denied\",\r\n  };\r\n}\r\nexport async function getGeolocationPermission(\r\n  navigator: Navigator\r\n): Promise<GeoLocationInterface> {\r\n  return new Promise((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        console.log(\"Success\");\r\n        const { longitude, latitude, geoPermission } =\r\n          getGeolocationSuccess(position);\r\n        resolve({ longitude, latitude, geoPermission });\r\n      },\r\n      (position) => {\r\n        console.log(\"Failed\");\r\n        const { longitude, latitude, geoPermission } =\r\n          getGeolocationFailed(position);\r\n        resolve({ longitude, latitude, geoPermission });\r\n      }\r\n    );\r\n  });\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./App.scss\";\r\n/** Components **/\r\nimport Map from \"./components/Map\";\r\nimport UserDetail from \"./components/UserDetail\";\r\nimport HQSelector from \"./components/HQSelector\";\r\nimport DriverCountSlider from \"./components/DriverCountSlider\";\r\n/** Actions **/\r\nimport {\r\n  updateUserLocation,\r\n  getNearestHQLocation,\r\n  updateUserDriverCount,\r\n  updateUserHQLocation,\r\n} from \"./actions/users\";\r\nimport { getNearestDrivers } from \"./actions/drivers\";\r\n/** Interfaces **/\r\nimport { UserInterface } from \"./reducers/usersReducer\";\r\nimport { DriverInterface } from \"./reducers/driverReducer\";\r\nimport { RootState } from \"./reducers\";\r\nimport {\r\n  HQLOCATIONS,\r\n  MINIMUM_DRIVERS,\r\n  MAXIMUM_DRIVERS,\r\n} from \"./utils/constants\";\r\nimport {\r\n  getGeolocationPermission,\r\n  GeoLocationInterface,\r\n} from \"./utils/permissions\";\r\n\r\ninterface PropsInterface {\r\n  user?: UserInterface;\r\n  driver?: DriverInterface;\r\n  getNearestDrivers?: () => void;\r\n  updateUserLocation?: (payload: UserInterface) => void;\r\n  updateUserDriverCount?: (payload: UserInterface) => void;\r\n  getNearestHQLocation?: (payload: UserInterface) => void;\r\n  updateUserHQLocation?: (payload: UserInterface) => void;\r\n}\r\n\r\nconst App = (props: PropsInterface) => {\r\n  /** Poll for drivers **/\r\n  useEffect(() => {\r\n    clearInterval();\r\n    const id = setInterval(() => {\r\n      if (props.getNearestDrivers) {\r\n        props.getNearestDrivers();\r\n      }\r\n    }, 5000);\r\n    return () => clearInterval(id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.getNearestDrivers]);\r\n\r\n  /** Get Location \r\n   Need to Check if user allows location access **/\r\n  const getLocation = async (): Promise<GeoLocationInterface> => {\r\n    const { longitude, latitude, geoPermission } =\r\n      await getGeolocationPermission(navigator);\r\n    console.log({ longitude, latitude, geoPermission });\r\n    return { longitude, latitude, geoPermission };\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLocation().then((geoLocation) => {\r\n      const { longitude, latitude, geoPermission } = geoLocation;\r\n      if (props.updateUserLocation)\r\n        props.updateUserLocation({\r\n          longitude,\r\n          latitude,\r\n          geoPermission,\r\n        } as UserInterface);\r\n      if (props.getNearestHQLocation)\r\n        props.getNearestHQLocation({\r\n          longitude,\r\n          latitude,\r\n        } as UserInterface);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [navigator.permissions]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"action-container\">\r\n        <div className=\"left-action-container\">\r\n          <HQSelector\r\n            locations={HQLOCATIONS}\r\n            returnToNearest={() =>\r\n              props.getNearestHQLocation && props.user\r\n                ? props.getNearestHQLocation({ ...props.user })\r\n                : null\r\n            }\r\n            onClick={(location) =>\r\n              props.updateUserHQLocation\r\n                ? props.updateUserHQLocation(location)\r\n                : null\r\n            }\r\n          />\r\n          <DriverCountSlider\r\n            maxValue={MAXIMUM_DRIVERS}\r\n            minValue={MINIMUM_DRIVERS}\r\n            count={props.user?.driverCount}\r\n            onChange={(event) =>\r\n              props.updateUserDriverCount\r\n                ? props.updateUserDriverCount({\r\n                    driverCount: event.target.value,\r\n                  } as UserInterface)\r\n                : null\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"right-action-container\">\r\n          <UserDetail user={props?.user} />\r\n        </div>\r\n      </div>\r\n      <Map\r\n        user={props.user}\r\n        driver={props.driver}\r\n        getNearestDrivers={props.getNearestDrivers}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = {\r\n  updateUserLocation,\r\n  updateUserDriverCount,\r\n  getNearestHQLocation,\r\n  getNearestDrivers,\r\n  updateUserHQLocation,\r\n};\r\nconst mapStateToProps = (state: RootState, ownProps: PropsInterface) => ({\r\n  user: state.user,\r\n  driver: state.driver,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { USERS } from \"../actionTypes/usersTypes\";\r\nimport { UserInterface } from \"../reducers/usersReducer\";\r\n\r\nexport function updateUserLocation(payload: UserInterface) {\r\n  return {\r\n    type: USERS.UPDATE_USER_LOCATION,\r\n    payload,\r\n  };\r\n}\r\nexport function updateUserDriverCount(payload: UserInterface) {\r\n  return {\r\n    type: USERS.UPDATE_USER_DRIVER_COUNT,\r\n    payload,\r\n  };\r\n}\r\nexport function getNearestHQLocation(payload: UserInterface) {\r\n  return {\r\n    type: USERS.GET_NEAREST_HQ_LOCATION.REQUESTED,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function updateUserHQLocation(payload: UserInterface) {\r\n  return {\r\n    type: USERS.UPDATE_USER_HQ_LOCATION,\r\n    payload,\r\n  };\r\n}\r\n","import { DRIVERS } from \"../actionTypes/driversTypes\";\r\n\r\nexport interface GetNearestDriversInterface {}\r\n\r\nexport function getNearestDrivers() {\r\n  return {\r\n    type: DRIVERS.GET_NEAREST_DRIVERS.REQUESTED,\r\n    payload: {},\r\n  };\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { USERS } from \"../actionTypes/usersTypes\";\r\nimport { RootState } from \"../reducers\";\r\nexport interface UserInterface {\r\n  status: string | null;\r\n  longitude: number | null;\r\n  latitude: number | null;\r\n  driverCount: string;\r\n  geoPermission: string | null;\r\n  HQLocation: {\r\n    country: string | null;\r\n    longitude: number | null;\r\n    latitude: number | null;\r\n  };\r\n}\r\ninterface Action {\r\n  type: string;\r\n  payload: object;\r\n}\r\nexport const initialState: UserInterface = {\r\n  status: null,\r\n  longitude: null,\r\n  latitude: null,\r\n  driverCount: \"5\",\r\n  geoPermission: null,\r\n  HQLocation: {\r\n    country: null,\r\n    longitude: null,\r\n    latitude: null,\r\n  },\r\n};\r\nexport default function UserReducer(state = initialState, action: Action) {\r\n  switch (action.type) {\r\n    case USERS.UPDATE_USER_LOCATION:\r\n      return {\r\n        status: \"updated\",\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case USERS.UPDATE_USER_DRIVER_COUNT:\r\n      return {\r\n        ...state,\r\n        status: \"updated\",\r\n        ...action.payload,\r\n      };\r\n    case USERS.UPDATE_USER_HQ_LOCATION:\r\n      return {\r\n        status: \"updated\",\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case USERS.GET_NEAREST_HQ_LOCATION.REQUESTED:\r\n      return {\r\n        ...state,\r\n      };\r\n    case USERS.GET_NEAREST_HQ_LOCATION.SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case USERS.GET_NEAREST_HQ_LOCATION.FAILED:\r\n      return {\r\n        ...state,\r\n        HQLocation: {\r\n          country: \"Singapore\",\r\n          longitude: 103.8522982,\r\n          latitude: 1.285194,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userSelector = (state: RootState): UserInterface => {\r\n  return state.user;\r\n};\r\n","import { DRIVERS } from \"../actionTypes/driversTypes\";\r\nimport { RootState } from \".\";\r\nexport interface DriverDetailsInterface {\r\n  driver_id: string;\r\n  location: {\r\n    latitude: number;\r\n    longitude: number;\r\n    bearing: number;\r\n  };\r\n}\r\n\r\nexport interface DriverInterface {\r\n  status: string | null;\r\n  count: number;\r\n  drivers: DriverDetailsInterface[] | [];\r\n  error: string;\r\n  pickup_eta: number | null;\r\n}\r\n\r\nexport interface ActionInterface {\r\n  type: string;\r\n  payload: {\r\n    longitude: number;\r\n    latitude: number;\r\n    count: number;\r\n  };\r\n}\r\nexport const initialState: DriverInterface = {\r\n  status: null,\r\n  count: 0,\r\n  drivers: [],\r\n  error: \"\",\r\n  pickup_eta: null,\r\n};\r\n\r\n/** Handles the Process of requesting the nearest Drivers\r\n *  REQUESTED -- Sends Axios Get Requst\r\n *  SUCCESS -- Receives a 200 status response\r\n *  FAILED -- Failed Request / Bad Request\r\n **/\r\nexport const driverSelector = (state: RootState) => {\r\n  return state.driver;\r\n};\r\nexport default function DriverReducer(\r\n  state = initialState,\r\n  action: ActionInterface\r\n) {\r\n  switch (action.type) {\r\n    case DRIVERS.GET_NEAREST_DRIVERS.REQUESTED:\r\n      return {\r\n        ...state,\r\n        status: \"requesting\",\r\n      };\r\n    case DRIVERS.GET_NEAREST_DRIVERS.SUCCESS:\r\n      return {\r\n        ...state,\r\n        status: \"success\",\r\n        ...action.payload,\r\n      };\r\n    case DRIVERS.GET_NEAREST_DRIVERS.FAILED:\r\n      return {\r\n        ...state,\r\n        status: \"failed\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport UserReducer from \"./usersReducer\";\r\nimport DriverReducer from \"./driverReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: UserReducer,\r\n  driver: DriverReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport default rootReducer;\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport QueryString from \"query-string\";\r\nimport { APPLICATION_JSON, MULTIPART_FORM_DATA } from \"./constants\";\r\nimport { REACT_APP_API_URL, API_PREFIX } from \"./constants\";\r\n/** Add missing crossDomain Type for Axios Request \r\n https://www.typescriptlang.org/docs/handbook/declaration-merging.html\r\n **/\r\ndeclare module \"axios\" {\r\n  export interface AxiosRequestConfig {\r\n    crossDomain: Boolean;\r\n  }\r\n}\r\n\r\n/** Handles Axios Function **/\r\nexport function dispatchApiAction({\r\n  url,\r\n  method,\r\n  data,\r\n}: AxiosRequestConfig): Promise<\r\n  | AxiosResponse<AxiosRequestConfig>\r\n  | {\r\n      error: any;\r\n    }\r\n> {\r\n  return axios\r\n    .request<AxiosRequestConfig>({ url, method, data, crossDomain: true })\r\n    .then((response) => response)\r\n    .catch((error) => ({ error }));\r\n}\r\n\r\n/** Handles Api Url Generation Function **/\r\ninterface UrlInterface {\r\n  host: string;\r\n  model: string;\r\n  route: string;\r\n  prefix: string | undefined;\r\n  query: object;\r\n}\r\nexport function getUrl({ host, prefix, model, route, query }: UrlInterface) {\r\n  let url = `${host}`;\r\n  if (prefix) url += `/${prefix}`;\r\n  url += `/${model}`;\r\n  if (route) url += `/${route}`;\r\n  if (query) url += `?${QueryString.stringify(query)}`;\r\n  return url;\r\n}\r\n\r\n/** Creates Options for Api Requests **/\r\ninterface AxiosOptions {\r\n  method: string;\r\n  data: object;\r\n  contentType: string;\r\n  token: string;\r\n}\r\nexport function getOptions({ method, data, contentType, token }: AxiosOptions) {\r\n  const authHeader: any = {};\r\n  /** This allows Url To be protected with API KEYS **/\r\n  authHeader.Authorization = `Basic ${btoa(`public:${process.env.API_KEY}`)}`;\r\n  switch (contentType) {\r\n    case MULTIPART_FORM_DATA:\r\n      return {\r\n        method,\r\n        headers: {\r\n          \"content-type\": MULTIPART_FORM_DATA,\r\n          ...authHeader,\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n        },\r\n        data,\r\n      };\r\n    default:\r\n      return {\r\n        method,\r\n        headers: {\r\n          \"content-type\": APPLICATION_JSON,\r\n          ...authHeader,\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n        },\r\n        data,\r\n      };\r\n  }\r\n}\r\nexport interface GetInterface {\r\n  model: string;\r\n  route: string;\r\n  query: object;\r\n  contentType: string | null;\r\n}\r\nexport function get({ model, route, query, contentType }: GetInterface) {\r\n  const options = getOptions({ method: \"GET\", contentType } as AxiosOptions);\r\n  const url = getUrl({\r\n    host: REACT_APP_API_URL,\r\n    prefix: API_PREFIX,\r\n    route,\r\n    model,\r\n    query,\r\n  } as UrlInterface);\r\n  return dispatchApiAction({ url, ...options } as AxiosRequestConfig);\r\n}\r\n","import { all, takeLatest, put, call, select } from \"@redux-saga/core/effects\";\r\nimport { get } from \"../utils/server\";\r\nimport { DRIVERS } from \"../actionTypes/driversTypes\";\r\nimport { ActionInterface } from \"../reducers/driverReducer\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { userSelector, UserInterface } from \"../reducers/usersReducer\";\r\n\r\nfunction* getDrivers(action: ActionInterface) {\r\n  try {\r\n    const user: UserInterface = yield select(userSelector as any);\r\n    const { HQLocation, driverCount } = user;\r\n    const { longitude, latitude } = HQLocation;\r\n    if (Number(driverCount) < 1 || !longitude || !latitude)\r\n      return put({ type: DRIVERS.GET_NEAREST_DRIVERS.FAILED, payload: {} });\r\n    const response: AxiosResponse = yield call(get as any, {\r\n      model: DRIVERS.MODEL,\r\n      route: \"getDrivers\",\r\n      query: {\r\n        count: driverCount,\r\n        longitude: longitude,\r\n        latitude: latitude,\r\n      },\r\n    });\r\n    if (response.status >= 400)\r\n      return put({ type: DRIVERS.GET_NEAREST_DRIVERS.FAILED, payload: {} });\r\n    yield put({\r\n      type: DRIVERS.GET_NEAREST_DRIVERS.SUCCESS,\r\n      payload: { ...response.data, count: response.data.drivers.length },\r\n    });\r\n  } catch (error) {\r\n    yield put({ type: DRIVERS.GET_NEAREST_DRIVERS.FAILED, payload: { error } });\r\n  }\r\n}\r\n\r\nfunction* driversSaga() {\r\n  yield all([takeLatest(DRIVERS.GET_NEAREST_DRIVERS.REQUESTED, getDrivers)]);\r\n}\r\n\r\nexport default driversSaga;\r\n","/** Haversine Formulae\r\n * Getting Distance between two locations\r\n * https://www.sisense.com/blog/latitude-longitude-distance-calculation-explained/\r\n * Must be in radians\r\n * A is the square of half the chord length between the points\r\n * C is the angular distance in radians\r\n * A = sin^2( (lat1 - lat2)/2 ) + cos(lat1)*cos(lat2) *sin^2((long1-long2)/2)\r\n * C = 2*atan2(sqrt(a), sqrt(1-a))\r\n * Distance = RadiusOfEarth*c\r\n * **/\r\n\r\nexport interface HFInterface {\r\n  latitude1: number;\r\n  latitude2: number;\r\n  longitude1: number;\r\n  longitude2: number;\r\n}\r\n\r\nexport function getDistanceHF({\r\n  latitude1,\r\n  latitude2,\r\n  longitude1,\r\n  longitude2,\r\n}: HFInterface): number {\r\n  var radiusOfEarth: number = 6371; // Radius of the earth in km\r\n  var distanceLatitude: number = deg2rad(latitude2 - latitude1);\r\n  var distanceLongitude: number = deg2rad(longitude2 - longitude1);\r\n  var chordDistance: number =\r\n    Math.sin(distanceLatitude / 2) * Math.sin(distanceLatitude / 2) +\r\n    Math.cos(deg2rad(latitude1)) *\r\n      Math.cos(deg2rad(latitude2)) *\r\n      Math.sin(distanceLongitude / 2) *\r\n      Math.sin(distanceLongitude / 2);\r\n  var angularDistance: number =\r\n    2 * Math.atan2(Math.sqrt(chordDistance), Math.sqrt(1 - chordDistance));\r\n  var distance: number = radiusOfEarth * angularDistance; // Distance in km\r\n  return distance;\r\n}\r\n\r\nexport function deg2rad(deg: number): number {\r\n  return deg * (Math.PI / 180);\r\n}\r\n\r\nexport default getDistanceHF;\r\n","import { USERS } from \"../actionTypes/usersTypes\";\r\nimport { all, takeLatest, put } from \"@redux-saga/core/effects\";\r\nimport { ActionInterface } from \"../reducers/driverReducer\";\r\nimport { getDistanceHF } from \"../utils/getDistance\";\r\nimport { HQLOCATIONS, HQLocationType } from \"../utils/constants\";\r\nfunction* getNearestHQLocation(action: ActionInterface) {\r\n  try {\r\n    const { longitude, latitude } = action.payload;\r\n    if (!longitude)\r\n      yield put({\r\n        type: USERS.GET_NEAREST_HQ_LOCATION.FAILED,\r\n        payload: { error: \"Invalid Longitude \" },\r\n      });\r\n    if (!latitude)\r\n      yield put({\r\n        type: USERS.GET_NEAREST_HQ_LOCATION.FAILED,\r\n        payload: { error: \"Invalid Latitude\" },\r\n      });\r\n    var nearestDistance: number = 0;\r\n    var distance: number = 0;\r\n    var nearestHQ: HQLocationType = {\r\n      country: \"\",\r\n      longitude: 0,\r\n      latitude: 0,\r\n    };\r\n    /** Get Nearest HQ **/\r\n    HQLOCATIONS.forEach((hq, index) => {\r\n      distance = getDistanceHF({\r\n        latitude1: latitude,\r\n        longitude1: longitude,\r\n        latitude2: hq.latitude,\r\n        longitude2: hq.longitude,\r\n      });\r\n      if (index === 0) {\r\n        nearestDistance = distance;\r\n        nearestHQ = hq;\r\n      } else if (nearestDistance > distance) {\r\n        nearestDistance = distance;\r\n        nearestHQ = hq;\r\n      }\r\n    });\r\n    yield put({\r\n      type: USERS.GET_NEAREST_HQ_LOCATION.SUCCESS,\r\n      payload: { HQLocation: nearestHQ },\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: USERS.GET_NEAREST_HQ_LOCATION.FAILED,\r\n      payload: { error },\r\n    });\r\n  }\r\n}\r\n\r\nfunction* driversSaga() {\r\n  yield all([\r\n    takeLatest(USERS.GET_NEAREST_HQ_LOCATION.REQUESTED, getNearestHQLocation),\r\n  ]);\r\n}\r\n\r\nexport default driversSaga;\r\n","import { all, fork } from \"@redux-saga/core/effects\";\r\nimport driversSaga from \"./driversSaga\";\r\nimport usersSaga from \"./usersSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(driversSaga)]);\r\n  yield all([fork(usersSaga)]);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"./reducers\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(rootSaga);\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n/** React Redux **/\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}