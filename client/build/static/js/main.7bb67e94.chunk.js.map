{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["mapboxgl","workerClass","require","default","App","useState","width","height","latitude","longitude","zoom","viewport","setViewport","navigator","geolocation","getCurrentPosition","postition","coords","console","log","className","mapboxApiAccessToken","process","onViewportChange","nextViewport","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAMAA,IAASC,YAAcC,EAAQ,IAAqDC,QAUpF,IAyBeC,EAzBO,WACpB,MAAgCC,mBAAwB,CACtDC,MAAM,QACNC,OAAO,QACPC,SAAU,QACVC,WAAY,SACZC,KAAM,IALR,mBAAOC,EAAP,KAAiBC,EAAjB,KAaA,OAJAC,UAAUC,YAAYC,oBAAoB,SAAAC,GACxC,MAA6BA,EAAUC,OAAhCR,EAAP,EAAOA,UAAUD,EAAjB,EAAiBA,SACjB,OAAOU,QAAQC,IAAIV,EAAUD,MAG7B,qBAAKY,UAAU,MAAf,SACG,cAAC,IAAD,2BACIT,GADJ,IAEAU,qBAAsBC,gGACtBC,iBAAkB,SAACC,GAAD,OAAqBZ,EAAYY,UCrB3CC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7bb67e94.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport ReactMapGL from 'react-map-gl';\nimport mapboxgl from \"mapbox-gl\"; // This is a dependency of react-map-gl even if you didn't explicitly install it\n// @ts-ignore\n// eslint-disable-next-line import/no-webpack-loader-syntax\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\n\ninterface ViewportProps {\n   width:any,\n   height:any,\n   latitude: number,\n   longitude: number,\n   zoom: number,\n}\n\nconst App: React.FC = () =>  {\n  const [viewport, setViewport] = useState<ViewportProps>({\n    width:'100vw',\n    height:'100vh',\n    latitude: 37.7577,\n    longitude: -122.4376,\n    zoom: 8\n  })\n  /** Get Location \n   Need to Check if user allows location access **/\n  navigator.geolocation.getCurrentPosition( postition => {\n    const {longitude,latitude} = postition.coords;\n    return console.log(longitude,latitude)\n  })\n  return (\n    <div className=\"App\">\n       <ReactMapGL\n       {...viewport}\n       mapboxApiAccessToken={process.env.REACT_APP_MAP_GL_TOKEN}\n       onViewportChange={(nextViewport:any)=> setViewport(nextViewport)}\n       />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}